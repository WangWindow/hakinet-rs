name: Build for Linux

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev pkg-config

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Lint with clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --all

    - name: Build release binaries
      run: |
        cargo build --release
        strip target/release/hakinet
        strip target/release/hakinet-scan

    - name: Create release archive
      if: github.event_name == 'release'
      run: |
        mkdir -p release-artifacts
        tar -czf release-artifacts/hakinet-linux-x86_64.tar.gz \
          -C target/release hakinet hakinet-scan \
          -C ../../ README.md LICENSE 2>/dev/null || \
          tar -czf release-artifacts/hakinet-linux-x86_64.tar.gz \
          -C target/release hakinet hakinet-scan \
          -C ../../ README.md

    - name: Upload release artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: hakinet-linux-x86_64
        path: release-artifacts/

    - name: Upload release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-artifacts/hakinet-linux-x86_64.tar.gz
        asset_name: hakinet-linux-x86_64.tar.gz
        asset_content_type: application/gzip

    - name: Upload build artifacts (non-release)
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: hakinet-linux-debug
        path: |
          target/release/hakinet
          target/release/hakinet-scan
        retention-days: 7
